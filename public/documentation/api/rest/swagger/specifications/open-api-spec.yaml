openapi: 3.0.0
info:
  title: Wallet Gateway Service
  version: 0.0.1
  description: |
    The Wallet Gateway API is a platform which handles the creation and management of virtual bank accounts.
    Interactions with the platform are made using REST API endpoints.
    There are several components involved in virtual account operations

    # Wallet API components

    ## Wallet Plans
    A wallet plan is used to group wallet accounts that share common charactersistics. Each wallet account has an associated wallet plan which defines:
    * The default currency to use
    * The balance threshold allowed
    * Compliance requirements to meet

    ## Wallet Organizations
    Each legal authority or company using the Wallet Platform is seen as a Wallet Organization. It's a container that gathers information about companies
    such as their legal representatives or legal documents. It could be also compliance and regulation requirements the company has to meet with regards
    to where customer data are stored and which security policies to apply

    ## Wallet Accounts
    Users or organizations can have mutliple accounts which their use for various means

    ## Wallet Account Users
    User personal information are handled separately from wallet accounts data
    That's where we enforce data security policies and compliance requirements

    ## Wallet Fees
    Each transaction or events within the wallet platform generate value or fees which are calculated based on the billing
    models asscoiated with each organization

    ## Wallet Remittance
    The remittance component of the wallet gateway helps with value transfer within the wallet platform but also between the wallet plaform
    and external bank accounts or wallet systems

    # Responses

    ## HTTP Response Codes
    | Status Code | Usage                                                       |
    |-------------|-------------------------------------------------------------|
    | 200         | The request completed successfully                          |
    | 201         | A new resource has been created                             |
    | 400         | Malformed request                                           |
    | 401         | Missing access token                                        |
    | 403         | The client does not have permission to access this resource |
    | 404         | Resource not found                                          |
    | 405         | Method not supported                                        |
    | 500         | Internal server error                                       |
    | 503         | Service unvailable                                          |

    ## Errors
    whenever an error occured within the platform, an error response that describes the problem will be returned

    | Field Name        | Field Description     |
    |-------------------|-----------------------|
    | Status            | "fail" or "error"     |
    | StatusCode        | A business error code |
    | StatusDescription | Error description     |

    ## Error codes

    | Error Code | Error Description                                |
    |------------|--------------------------------------------------|
    | 0001       | Can't obtain the list of wallet account users    |
    | 0002       | Can't create the wallet account user             |
    | 0003       | Wallet account user not found                    |
    | 0004       | Can't obtain wallet account user data            |

    # Changelog

    ## 2020-03-26

    * Add endpoint for getting user accounts
    * Add Account Top Up endpoint
    * Add Account debit endpoint
    * Add endpoint for getting account transactions

    ## 2020-03-17

    * Add OAUTH2 Client Credential Grant
    * Add endpoint for creating new User
    * Add endpoint for getting user information
    * Add endpoint for creating new Account

    ## 2020-10-24

    * Add endpoint for getting oauth2 access token
    * Add endpoint for authenticating wallet users
    * Add endpoint for new user registration
    * Add registration confirmation endpoint

    # Useful links

  termsOfService: 'http://swagger.io/terms/'
  x-logo:
    url: '/img/NBK_logo.jpeg'
    backgroundColor: '#FFFFFF'
    altText: NBK Logo
servers:
  - url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
    description: Testing Server
  - url: 'http://localhost:8083'
    description: Local Server
tags:
  - name: Wallet Plans
    description: Wallet Plans are used to group wallet accounts that have common characteristics
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Organizations
    description: A Wallet Organization is a company that have a set of wallet plans
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Accounts
    description: Wallet accounts
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Account Users
    description: Wallet account owners
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Regions
    description: Wallet regions
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Fees
    description: Wallet fees
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Remittance
    description: Wallet remittance
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Authentication
    description: Wallet API Gateway Authentication
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
  - name: Wallet Registration
    description: Wallet API Gateway Registration
    externalDocs:
      url: 'https://wallet-gateway-svc-x6fr3lwlgq-nw.a.run.app'
paths:
  /v1/wallets/users:
    $ref: 'open-api-wallet-account-users-spec.yaml'
  /v1/wallets/users/{userId}:
    $ref: 'open-api-wallet-account-user-spec.yaml'
  /v1/wallets/users/{userId}/update/notify:
    $ref: 'open-api-wallet-account-user-update-notify-spec.yaml'
  /v1/wallets/users/{userId}/accounts:
    $ref: 'open-api-wallet-accounts-spec.yaml'
  /v1/wallets/users/{userId}/personal/accounts:
    $ref: 'open-api-wallet-personal-accounts-spec.yaml'
  /v1/wallets/users/{userId}/accounts/{accountId}:
    $ref: 'open-api-wallet-account-spec.yaml'
  /v1/wallets/users/{userId}/accounts/{accountId}/balance/topUp:
    $ref: 'open-api-wallet-account-topup-spec.yaml'
  /v1/wallets/users/{userId}/accounts/{accountId}/balance/debit:
    $ref: 'open-api-wallet-account-debit-spec.yaml'
  /v1/wallets/users/{userId}/accounts/{accountId}/transactions:
    $ref: 'open-api-wallet-account-transactions-spec.yaml'
  /v1/wallets/users/{userId}/beneficiaries:
    $ref: 'open-api-wallet-account-users-beneficiaries-spec.yaml'
  /v1/wallets/users/{userId}/payment-means:
    $ref: 'open-api-wallet-account-users-payment-means-spec.yaml'
  /v1/wallets/users/{userId}/payment-means/{paymentMeanId}:
    $ref: 'open-api-wallet-account-users-payment-mean-spec.yaml'
  /v1/wallets/users/connected/users:
    $ref: 'open-api-wallet-account-users-app-spec.yaml'
  /v1/wallets/users/non-app/users:
    $ref: 'open-api-wallet-account-non-users-app-spec.yaml'
  /v1/wallets/plans:
    $ref: 'open-api-wallet-plans-spec.yaml'
  /v1/wallets/plans/{planId}:
    $ref: 'open-api-wallet-plan-spec.yaml'
  /v1/wallets/organizations:
    $ref: 'open-api-wallet-organizations-spec.yaml'
  /v1/wallets/organizations/{organizationId}:
    $ref: 'open-api-wallet-organization-spec.yaml'
  /v1/wallets/organizations/accounts:
    $ref: 'open-api-wallet-organization-accounts-spec.yaml'
  /v1/wallets/organizations/accounts/{accountId}:
    $ref: 'open-api-wallet-organization-account-spec.yaml'
  /v1/wallets/organizations/accounts/{accountId}/transactions:
    $ref: 'open-api-wallet-organization-account-transactions-spec.yaml'
  /v1/wallets/regions:
    $ref: 'open-api-wallet-regions-spec.yaml'
  /v1/wallets/regions/{regionId}:
    $ref: 'open-api-wallet-region-spec.yaml'
  /v1/wallets/fees:
    $ref: 'open-api-wallet-fees-spec.yaml'
  /v1/wallets/fees/{feeId}:
    $ref: 'open-api-wallet-fee-spec.yaml'
  /v1/wallets/fees/quote/calculate:
    $ref: 'open-api-wallet-quote-fees-spec.yaml'
  /v1/wallets/remittances:
    $ref: 'open-api-wallet-remittances-spec.yaml'
  /v1/wallets/walletToWallet/remittances:
    $ref: 'open-api-wallet-to-wallet-remittances-spec.yaml'

  /v1/authentication/oauth2/token/{clientId}/{clientSecret}:
    $ref: 'open-api-wallet-authentication-oauth2-spec.yaml'
  /v1/authentication/users:
    $ref: 'open-api-wallet-authentication-user-spec.yaml'
  /v1/authentication/users/{userName}/{userPassword}:
    $ref: 'open-api-wallet-authentication-users-spec.yaml'
  /v1/authentication/forgot/password/users/{userName}:
    $ref: 'open-api-wallet-forgot-password-users-spec.yaml'
  /v1/authentication/forgot/confirm/new/password/users:
    $ref: 'open-api-wallet-confirm-forgot-password-users-spec.yaml'
  /v1/authentication/users/disable:
    $ref: 'open-api-wallet-authentication-disable-spec.yaml'
  /v1/authentication/users/enable:
    $ref: 'open-api-wallet-authentication-enable-spec.yaml'

  /v1/registration/users:
    $ref: 'open-api-wallet-users-registration-spec.yaml'
  /v1/registration/users/confirmation/{userName}/{code}:
    $ref: 'open-api-wallet-users-registration-confirmation-spec.yaml'
  /v1/registration/users/resend/{userName}/confirmationcode:
    $ref: 'open-api-wallet-resend-confirmation-spec.yaml'

components:
  securitySchemes:
    oAuth2:
      type: oauth2
      description: This API uses OAuth 2 with the client credentials grant flow
      flows:
        clientCredentials:
          tokenUrl: https://nbk-wallet.auth.eu-west-1.amazoncognito.com/oauth2/token
          scopes:
            WalletUserRead: Read permissions on User data
            WalletUserWrite: Write permissions on User data
            TopUpAccount: TopUp Account
            DebitAccount: Debit Account
            GetAccountTransactions: List all the transactions on the account
            WalletPlanRead: Read permission on Wallet Plan
            WalletPlanWrite: Write permission on Wallet Plan
            CreateTransfer: Create a transfer
            ListTransfers: List transfers
            ListPaymentMeans: List Payment Means
            CreatePaymentMeans: Create Payment Mean
            GetPaymentMean: Get Payment Mean Data
            ListOrganizationAccounts: List Organization Accounts
            CreateOrganizationAccount: Create Organization Account
            GetOrganizationAccount: Get Organization Account
            GetOrganizationAccountTransactions: Get Organization Account Transactions
            AuthenticateUsers: Authenticate wallet users
            RegisterNewUsers: Register new users
            ConfirmUserRegistration: Confirm user registration
            WalletFeeRead: Read permissions on wallet fees
            WalletFeeWrite: Write permissions on wallet fees
  schemas:
    ResponseStatus:
      type: string
      enum:
        - success
        - fail
        - error
    ResponseStatusCode:
      type: number
      example: 1023
    ResponseStatusDescription:
      type: string
      example: error description
    ErrorResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ResponseStatus'
        statusCode:
          $ref: '#/components/schemas/ResponseStatusCode'
        statusDescription:
          $ref: '#/components/schemas/ResponseStatusDescription'
    WalletPlan:
      type: object
      properties:
        name:
          type: string
          example: Tontine
        currency:
          $ref: '#/components/schemas/Currency'
        status:
          $ref: '#/components/schemas/WalletPlanStatus'
        compliance:
          type: object
          properties:
            kycRules:
              type: array
              items:
                type: string
                example: 5fb8db42528c88448b61f7a3
    WalletPlanWithId:
      allOf:
        - $ref: '#/components/schemas/WalletPlan'
        - type: object
          required:
            - planId
          properties:
            planId:
              type: string
              description: Plan identifier
              format: uuid
              example: 45466ea6-512d-42c7-b57f-d11c53890456
    WalletPlans:
      items:
        $ref: '#/components/schemas/WalletPlan'
    WalletPlanStatus:
      type: string
      description: Actual Status of the wallet plan
      enum:
        - active
        - deactivated
    Currency:
      type: string
      enum:
        - EUR
        - GPB
    WalletOrganization:
      type: object
      properties:
        name:
          type: string
          example: Hakili-corp
        email:
          type: string
          example: admin@hakili-corp.io
        phoneNumber:
          type: string
          example: "+447307568957"
        mobileNumber:
          type: string
          example: "+447307568952"
        address:
          $ref: '#/components/schemas/Address'
    WalletOrganizationWithId:
      allOf:
        - $ref: '#/components/schemas/WalletOrganization'
        - type: object
          required:
            - organizationId
          properties:
            organizationId:
              type: string
              description: Organization identifier
              example: 5e7e2423b7628f5bc41f6bea
    WalletOrganizations:
      type: array
      items:
        $ref: '#/components/schemas/WalletOrganization'
    Address:
      type: object
      properties:
        streetName:
          type: string
          description: Street name
          example: Wicksteed House
        streetNumber:
          type: string
          description: Street number
          example: "35"
        city:
          type: string
          description: The city name
          example: Elephant And Castle
        postCode:
          type: string
          description: The zip code
          example: "SE16RQ"
        state:
          type: string
          description: The state name
          example: London
        country:
          type: string
          description: The country name
          example: United Kingdom
    WalletAccount:
      type: object
      properties:
        walletPlanId:
          type: string
          description: The Wallet Platform identifier for the wallet plan this account refers to
          example: 5ea066c96aae701018afdb7b
        accountType:
          type: string
          description: A master account that's linked to an organization or a regular account used by organization customers
          enum:
            - personal
            - business
        name:
          type: string
          description: A name that identifies this account
          example: Main account
    WalletAccountWithId:
      allOf:
        - $ref: '#/components/schemas/WalletAccount'
        - type: object
          required:
            - accountId
            - walletAccountOwner
            - walletOrganizations
          properties:
            accountId:
              type: string
              description: Account identifier
              example: 5ea066c96aae701018afdb7b
            walletAccountOwner:
              type: object
              properties:
                userId:
                  type: string
                  description: The user identifier
                  example: 5e7e2423b7628f5bc41f6bea
            balance:
              type: number
              description: The actual balance of this account
              example: 200.23
            walletOrganizations:
              type: array
              items:
                type: string
                example: 5e7e2423b7628f5bc41f6bea
            createdAt:
              type: number
              example: 1587577927
            modifiedAt:
              type: number
              example: 1587577927
            status:
              type: string
              enum:
                - active
                - disabled
                - deleted
    WalletAccounts:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccount'
    WalletAccountsWithId:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccountWithId'
    WalletAccountUserWithId:
      allOf:
        - $ref: '#/components/schemas/WalletAccountUser'
        - type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: The user identifier
              format: uuid
              example: 5e7e2423b7628f5bc41f6bea
            createdAt:
              type: number
              example: 1587577927
            modifiedAt:
              type: number
              example: 1587577927
            status:
              type: string
              enum:
                - active
                - disabled
                - deleted
    WalletAccountUser:
      type: object
      properties:
        lastName:
          type: string
          description: User last name
          example: John
        firstName:
          type: string
          description: User first name
          example: Doe
        email:
          type: string
          description: user email address
          format: email
          example: my-email@gmail.com
        birthDay:
          type: string
          description: user birthDay
          format: email
          example: yyy-mm-dd
        nationality:
          type: string
          description: user nationality
          example: "Senegalese"
        phoneNumber:
          type: string
          description: User phone number
          example: "+447307368957"
        mobileNumber:
          type: string
          description: User mobile number
          example: "+447507568957"
        language:
          type: string
          description: User language
          example: EN
        deviceToken:
          type: string
          description: User mobile device Token
          example: "dqdzdfzdcxxxxxx13122322"
        deviceOs:
          type: string
          description: User mobile device OS
          example: "ANDROID"
        address:
          $ref: '#/components/schemas/Address'
    WalletAccountUsers:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccountUser'
    WalletAccountUsersWithId:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccountUserWithId'
    Fees:
      type: object
      properties:
        rate:
          type: number
          example: 1.4
        flatRate:
          type: number
          example: 0.25
    WalletFee:
      type: object
      properties:
        paymentMean:
          type: string
          description: paymentMean name
          example: Stripe
        regions:
          type: array
          items:
            type: string
            example: 8fc1623161119d4ec9aee036
        walletOrganizations:
          type: array
          items:
            type: string
            example: 6fc1623161119d4ec9aee036
        fees:
          $ref: '#/components/schemas/Fees'
        extras:
          $ref: '#/components/schemas/Extras'
    WalletFeeWithId:
      allOf:
        - $ref: '#/components/schemas/WalletFee'
        - type: object
          required:
            - regionId
          properties:
            feeId:
              type: string
              description: fee identifier
              example: 7fc1623161119d4ec9aee036
    WalletFees:
      allOf:
        - $ref: '#/components/schemas/WalletFee'
        - type: object
          required:
            - feeId
          properties:
            feeId:
              type: string
              description: fee identifier
              example: 7fc1623161119d4ec9aee036
    WalletRemittance:
      type: object
      properties:
        sender:
          $ref: '#/components/schemas/WalletRemittanceSender'
        receiver:
          $ref: '#/components/schemas/WalletRemittanceReceiver'
        amount:
          type: number
          description: amount to send
          example: 10
    WalletRemittanceWithId:
      allOf:
        - $ref: '#/components/schemas/WalletRemittance'
        - type: object
          required:
            - transferId
          properties:
            transferId:
              type: string
              description: Transfer identifier
              example: 5e7e2423b7628f5bc41f6bea

    WalletRemittanceSender:
      type: object
      properties:
        accountId:
          type: string
          description: Sender account id
          example: 5eef7c7d6008d476e833bfcc
    WalletRemittanceReceiver:
      type: object
      properties:
        beneficiaryId:
          type: string
          description: Beneficiary account id
          example: 5ef1fdaccda47b3979e84e3b
    WalletRemittances:
      type: array
      items:
        $ref: '#/components/schemas/WalletRemittance'
    WalletAccountTransaction:
      type: object
      properties:
        amount:
          type: number
          description: amount
          example: 20
        description:
          type: string
          description: transaction description
          example: Top Up
        datetime:
          type: string
          description: Transaction time in UTC
          example: 10/09/2020 12:20:09
    WalletAccountTransactionWithId:
      allOf:
        - $ref: '#/components/schemas/WalletAccountTransaction'
        - type: object
          required:
            - transactionId
          properties:
            transactionId:
              type: string
              description: transaction ID
              example: 45466ea6-512d-42c7-b57f-d11c53890456
    WalletAccountTransactionsWithId:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccountTransactionWithId'
    ComplianceDocument:
      type: object
      properties:
        name:
          type: string
          enum:
            - PASSPORT
            - DRIVING_LICENSE
            - CARD_ID
            - NATIONAL_ID
            - RESIDENT_PERMIT_ID
            - PHOTO_CARD
        level:
          type: number
          example: 1
    ComplianceDocuments:
      type: array
      items:
        $ref: '#/components/schemas/ComplianceDocument'
    WalletAccountBeneficiariesWithId:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccountBeneficiaryWithId'
    WalletAccountBeneficiaries:
      type: array
      items:
        $ref: '#/components/schemas/WalletAccountBeneficiary'
    WalletAccountBeneficiaryWithId:
      allOf:
        - $ref: '#/components/schemas/WalletAccountBeneficiary'
        - type: object
          required:
            - beneficiaryId
          properties:
            beneficiaryId:
              type: string
              description: Beneficiary Identifier
              example: 5e7e2423b7628f5bc41f6bea
            userId:
              type: string
              description: user Identifier
              example: 5e7e2423b7628f5bc41f6bea
            organizationId:
              type: string
              description: Organization identifier
              example: 5e7e2423b7628f5bc41f6bea
            createdAt:
              type: number
              example: 1587577927
            modifiedAt:
              type: number
              example: 1587577927
            deletedAt:
              type: number
              example: 1587577927
            status:
              type: string
              enum:
                - active
                - disabled
                - deleted
    WalletAccountBeneficiary:
      type: object
      properties:
        beneficiaryType:
          type: string
          enum:
            - INDIVIDUAL
            - COMPANY
        beneficiaryDetails:
          type: object
          properties:
            name:
              type: string
              description: Beneficiary name
              example: New Beneficiary Name
            email:
              type: string
              description: Beneficiary email address
              example: mkeita@hakili.io
            phoneNumber:
              type: string
              description: Beneficiary phone number
              example: 0033613045943
            address:
              $ref: '#/components/schemas/Address'
        beneficiaryAccountDetails:
          type: object
          properties:
            accountType:
              type: string
              enum:
                - WALLET_ACCOUNT
                - BANK_ACCOUNT
                - DEBIT_CARD
            accountIdentifiers:
              type: array
              items:
                $ref: '#/components/schemas/BeneficiaryAccountIdentifier'
        transferNotification:
          type: object
          properties:
            beneficiary:
              type: object
              properties:
                notify:
                  type: boolean
                  example: true
            sender:
              type: object
              properties:
                notify:
                  type: boolean
                  example: true
    BeneficiaryAccountIdentifier:
      type: object
      properties:
        accountIdentifierName:
          type: string
          description: Account identifier name
          enum:
            - WALLET_ACCOUNT_ID
            - IBAN
            - SWIFT_CODE
            - BANK_CARD_NUMER
        accountIdentifierValue:
          type: string
          description: Account identifier value
          example: 5e7e2423b7628f5bc41f6bea
    UserPaymentMeansWithId:
      type: array
      items:
        $ref: '#/components/schemas/UserPaymentMeans'
    UserPaymentMeans:
      type: array
      items:
        $ref: '#/components/schemas/UserPaymentMean'
    UserPaymentMeanWithId:
      allOf:
        - $ref: '#/components/schemas/UserPaymentMean'
        - type: object
          required:
            - PaymentMeanId
          properties:
            PaymentMeanId:
              type: string
              description: Payment Mean Identifier
              example: 5e7e2423b7628f5bc41f6bea
            userId:
              type: string
              description: user Identifier
              example: 5e7e2423b7628f5bc41f6bea
            organizationId:
              type: string
              description: Organization identifier
              example: 5e7e2423b7628f5bc41f6bea
            createdAt:
              type: number
              example: 1587577927
            modifiedAt:
              type: number
              example: 1587577927
            deletedAt:
              type: number
              example: 1587577927
            status:
              type: string
              enum:
                - active
                - disabled
                - deleted
    UserPaymentMean:
      type: object
      properties:
        name:
          type: string
          description: Payment mean name
          example: BNP
        type:
          type: string
          description: payment mean type
          enum:
            - BANK_ACCOUNT
            - DEBIT_CARD
        debitCardDetails:
          type: object
          properties:
            cardName:
              type: string
              description: Card name
              example: BNP Payment Card
            cardNumber:
              type: string
              description: Card number
              example: XXX XXXX XXXX
        bankAccountDetails:
          type: object
          properties:
            bankName:
              type: string
              description: Bank name
              example: BNP PARIBAS
            bic:
              type: string
              description: BIC
              example: BNPA FR PP XXX
            iban:
              type: string
              description: IBAN
              example: FR76 3000 4022 8000 0005 3292 671
    RegistrationRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          description: user email address
          example: joe@hakili.io
        password:
          type: string
          description: user password
          example: "M0oiuyt12@uiU"
        mobileNumber:
          type: string
          description: User mobile number
          example: "+447307568957"
        birthDay:
          type: string
          description: user birthDay
          format: email
          example: yyy-mm-dd
        nationality:
          type: string
          description: user nationality
          example: "Senegalese"
        deviceToken:
          type: string
          description: User mobile device Token
          example: "dqdzdfzdcxxxxxx13122322"
        deviceOs:
          type: string
          description: User mobile device OS
          example: "ANDROID"
        address:
          $ref: '#/components/schemas/Address'
        language:
          type: string
          example: "EN"
        group:
          type: string
          enum:
            - USER
            - ADMIN
    Extras:
      type: object
    Originator:
      type: object
      properties:
        originatorType:
          type: string
          example: "User"
        originatorId:
          type: string
          example: 8fc1623161119d4ec9aee036
    QuoteSpec:
        type: object
        properties:
          feeId:
            type: string
            example: 7fc1623161119d4ec9aee036
          rate:
            type: number
            example: 1.4
          flatRate:
            type: number
            example: 0.25
          extras:
            $ref: '#/components/schemas/Extras'
    PaymentMean:
      type: object
      properties:
        type:
          type: string
          example: "Stripe"
        fees:
          type: number
          example: 5.25
        spec:
          $ref: '#/components/schemas/QuoteSpec'
    Nbk:
      type: object
      properties:
        fees:
          type: number
          example: 5.25
        spec:
          $ref: '#/components/schemas/QuoteSpec'

    QuotePayload:
      type: object
      properties:
        paymentMean:
          type: string
          description: paymentMean name
          example: Stripe
        amount:
          type: number
          description: amount
          example: 30
        accountId:
          type: string
          description:  accountId
          example: 5fc1623161119d4ec9aee036
        regions:
          type: array
          items:
            type: string
            example: 8fc1623161119d4ec9aee036
        operation:
          type: string
          description: operation name
          example: "topUp"
        currency:
          type: string
          description: currency name
          example: "EUR"
        originator:
          $ref: '#/components/schemas/Originator'
    QuoteResponse:
      type: object
      properties:
        walletOrganizations:
          type: array
          items:
            type: string
            example: 6fc1623161119d4ec9aee036
        regionId:
          type: string
          example: 8fc1623161119d4ec9aee036
        paymentMean:
          $ref: '#/components/schemas/PaymentMean'
        nbk:
          $ref: '#/components/schemas/Nbk'
        extras:
          $ref: '#/components/schemas/Extras'
    WalletRegionWithId:
      allOf:
        - $ref: '#/components/schemas/WalletRegion'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: region identifier
              example: 6fc1623161119d4ec9aee036
    CountryCodes:
      type: string
      example: FR
    WalletRegion:
      type: object
      properties:
        name:
          type: string
          description: region name
          example: REGION A
        countryCodes:
          type: array
          items:
            $ref: '#/components/schemas/CountryCodes'
        extras:
          $ref: '#/components/schemas/Extras'
    WalletRegions:
      type: array
      items:
        $ref: '#/components/schemas/WalletRegion'
    AccountUpdateTransactionDetails:
      type: object
      properties:
        transactionId:
          type: string
          description: transactionId
          example: 6fc1623161119d4ec9aee036
    AppUserRequest:
      type: object
      properties:
        mobileNumbers:
          $ref: '#/components/schemas/MobileNumbers'

    MobileNumber:
      type: string

    MobileNumbers:
      type: array
      items:
        $ref: '#/components/schemas/MobileNumber'
      example: ['+447337568975', '+447311568923']

    ConfirmForgetPassWordRequest:
      type: object
      properties:
        userName:
          type: string
          description: user email address
          example: john.doe@gmail.com
        userPassword:
          type: string
          description: user password
          example: M0oiuyt12@uiU
        confirmationCode:
          type: string
          description: confirmationCode sent by email
          example: "234564"

    AuthenticationRequest:
      type: object
      properties:
        userName:
          type: string
          description: user email address
          example: john.doe@gmail.com
        userPassword:
          type: string
          description: user password
          example: M0oiuyt12@uiU
#        userIp:
#          type: string
#          description: user Ip
#          example: 192.168.4.230
#        address:
#          $ref: '#/components/schemas/Address'


    AuthenticationResponse:
      type: object
      properties:
        AccessToken:
          type: string
          example: |
            eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ....
        ExpiresIn:
          type: string
          example: 3600
        TokenType:
          type: string
          enum:
            - Bearer
        RefreshToken:
          type: string
          example: |
            eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ....
        IdToken:
          type: string
          example: |
            eyJraWQiOiJ5eENpaEJKV1hRXC9SSjBzOEpkVTk4ZEtWYnMzWHdjQWp3Q3R4WFBhWmN0bz0iLCJhbGciOiJSUzI1NiJ9
        userId:
          type: string
          example: |
            2123445


    UpdateUserNotifyRequest:
      type: object
      properties:
        notify:
          type: boolean
          description: user notify
          example: false
    EnableAndDisableUserRequest:
      type: object
      properties:
        userName:
          type: string
          description: user email address
          example: john.doe@gmail.com

    EnableAndDisableUserResponse:
      type: object
      properties:
        email:
          type: string
          description: user email address
          example: john.doe@gmail.com
        information:
          type: string
          description: disable or enable user
          example: User is disabled or enabled successfully





